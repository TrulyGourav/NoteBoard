{"ast":null,"code":"var _jsxFileName = \"F:\\\\my projects\\\\note-keeper\\\\src\\\\components\\\\note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport EditNote from './EditNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  _s();\n  const [editState, setEditState] = useState(false);\n  function handleDelete() {\n    props.onDelete(props.id);\n  }\n  function handleEditNote() {\n    setEditState(true);\n  }\n  function cancelEditNote() {\n    setEditState(false);\n  }\n  function saveNote(note) {\n    console.log(\"printing note id: \", props.id);\n\n    // Send the updated note to the server\n    fetch(`http://localhost:8080/noteboard/update/${props.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }).then(response => {\n      if (response.ok) {\n        // Note successfully updated on the server\n        console.log('Note updated successfully');\n      } else {\n        // Handle the error if note update fails\n        console.error('Failed to update note');\n      }\n    }).catch(error => {\n      console.error('An error occurred while updating the note', error);\n    });\n    window.location.reload();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        style: {\n          color: '#0b8ee5'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditNote,\n      children: /*#__PURE__*/_jsxDEV(DriveFileRenameOutlineIcon, {\n        style: {\n          color: '#0b8ee5'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), editState && /*#__PURE__*/_jsxDEV(EditNote, {\n      title: props.title,\n      content: props.content,\n      onCancel: cancelEditNote,\n      onSave: saveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n_s(Note, \"ET4Jq8yQoVUZVPUQC71Y6RqwBXI=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","DeleteIcon","DriveFileRenameOutlineIcon","EditNote","jsxDEV","_jsxDEV","Note","props","_s","editState","setEditState","handleDelete","onDelete","id","handleEditNote","cancelEditNote","saveNote","note","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","error","catch","window","location","reload","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","style","color","onCancel","onSave","_c","$RefreshReg$"],"sources":["F:/my projects/note-keeper/src/components/note.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport EditNote from './EditNote';\r\n\r\nfunction Note(props){\r\n    const [editState, setEditState] = useState(false);\r\n\r\n    function handleDelete(){\r\n        props.onDelete(props.id);\r\n    }\r\n    function handleEditNote(){\r\n        setEditState(true);\r\n    }\r\n    function cancelEditNote(){\r\n        setEditState(false);\r\n    }\r\n    function saveNote(note) {\r\n        console.log(\"printing note id: \", props.id)\r\n        \r\n        // Send the updated note to the server\r\n        fetch(`http://localhost:8080/noteboard/update/${props.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(note),\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n              // Note successfully updated on the server\r\n              console.log('Note updated successfully');\r\n            } else {\r\n              // Handle the error if note update fails\r\n              console.error('Failed to update note');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('An error occurred while updating the note', error);\r\n        });\r\n        window.location.reload();\r\n    }            \r\n        \r\n    return <div className='note'>\r\n        <h1>{props.title}</h1>\r\n        <p>{props.content}</p>\r\n        <button onClick={handleDelete}><DeleteIcon style={{ color: '#0b8ee5' }}/></button>\r\n        <button onClick={handleEditNote}><DriveFileRenameOutlineIcon style={{ color: '#0b8ee5'}}/></button>\r\n        {editState && <EditNote \r\n            title={props.title}\r\n            content={props.content}\r\n            onCancel={cancelEditNote}\r\n            onSave={saveNote} />}\r\n    </div>\r\n}\r\nexport default Note;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}